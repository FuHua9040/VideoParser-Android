name: Build Android APK

on: [push]

jobs:
  build:
    runs-on: ubuntu-22.04
    timeout-minutes: 240  # 延长超时时间至4小时
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup build environment
      run: |
        # 清理可能存在的旧构建文件
        rm -rf .buildozer .builduser bin
        
        # 创建必要的目录
        mkdir -p ~/.buildozer/android/platform
        mkdir -p ~/.android
        touch ~/.android/repositories.cfg
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
            git zip unzip openjdk-11-jdk \
            libncurses5 zlib1g-dev \
            libffi-dev libssl-dev \
            python3-pip autoconf libtool pkg-config
        pip install --upgrade pip wheel
        pip install buildozer cython==0.29.36 python-for-android==2023.8.17
        echo "系统依赖安装完成"
        
    - name: Install Android SDK and NDK
      run: |
        echo "=== 安装 Android SDK 和 NDK ==="
        
        # 下载命令行工具
        wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O cmdline-tools.zip
        unzip -q cmdline-tools.zip -d cmdline-tools
        mkdir -p ~/android-sdk/cmdline-tools
        mv cmdline-tools/cmdline-tools ~/android-sdk/cmdline-tools/latest
        rm cmdline-tools.zip
        
        # 设置环境变量
        echo "ANDROID_SDK_ROOT=$HOME/android-sdk" >> $GITHUB_ENV
        echo "ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
        echo "PATH=$HOME/android-sdk/cmdline-tools/latest/bin:$HOME/android-sdk/platform-tools:$PATH" >> $GITHUB_ENV
        
        # 接受许可证
        yes | ~/android-sdk/cmdline-tools/latest/bin/sdkmanager --licenses > /dev/null
        
        # 安装必要组件
        ~/android-sdk/cmdline-tools/latest/bin/sdkmanager \
            "platform-tools" \
            "platforms;android-33" \
            "build-tools;34.0.0" \
            "ndk;25.2.9519653"
        
        echo "Android SDK 和 NDK 安装完成"
        
    - name: Configure Python-for-Android
      run: |
        echo "=== 配置 Python-for-Android ==="
        
        # 手动设置 Python-for-Android
        git clone https://github.com/kivy/python-for-android.git ~/python-for-android
        cd ~/python-for-android
        git checkout 2023.8.17
        
        # 安装 Python-for-Android
        pip install .
        
        # 设置环境变量
        echo "P4A_DIR=$HOME/python-for-android" >> $GITHUB_ENV
        echo "PATH=$HOME/python-for-android:$PATH" >> $GITHUB_ENV
        
        echo "Python-for-Android 配置完成"
        
    - name: Build APK with direct p4a
      run: |
        echo "=== 使用直接 p4a 命令构建 APK ==="
        
        # 创建项目目录
        mkdir -p ~/app
        cp -r . ~/app
        cd ~/app
        
        # 使用 p4a 直接构建
        p4a apk --private . \
            --package=org.videoparser \
            --name="视频解析助手" \
            --version=1.0.0 \
            --bootstrap=sdl2 \
            --requirements=python3,kivy==2.2.1,urllib3 \
            --permission=INTERNET \
            --arch=arm64-v8a \
            --sdk-dir=$ANDROID_SDK_ROOT \
            --ndk-dir=$ANDROID_SDK_ROOT/ndk/25.2.9519653 \
            --android-api=33 \
            --orientation=portrait \
            --window \
            --release
        
        # 复制生成的 APK
        cp *.apk $GITHUB_WORKSPACE/
        echo "APK 构建成功"
        
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: videoparser-apk
        path: |
          *.apk
